name: Artifacts

on:
  pull_request:
    branches:
      - main
  push:
    tags:
      - v*
    branches:
      - main

permissions:
  contents: write

jobs:
  artifacts:
    name: Goreleaser release
    runs-on: ubuntu-latest
    container:
      image: docker.io/goreleaser/goreleaser-cross:v1.22.4
      options: --privileged
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # https://github.com/actions/checkout/issues/766
      - name: Add repository directory to the git global config as a safe directory
        run: git config --global --add safe.directory "${GITHUB_WORKSPACE}"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Run Goreleaser release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: goreleaser release --clean --verbose

      - name: Run Goreleaser snapshot
        run: goreleaser release --clean --verbose --snapshot

  manifests:
    name: Manifests generate and release
    runs-on: ubuntu-latest
    needs: artifacts
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set up Jsonnet
        run: ./env-jsonnet.sh

      - name: Set up environment
        run: ./env.sh

      - name: Generate
        run: cd deploy && make --always-make vendor manifests

      - name: Prepare
        run: |
          tar -zcvf deploy/manifests.tar.gz deploy/manifests
          cp deploy/manifests/kubernetes/manifest.yaml deploy/kubernetes-manifest.yaml
          cp deploy/manifests/openshift/manifest.yaml deploy/openshift-manifest.yaml

      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            deploy/manifests.tar.gz
            deploy/kubernetes-manifest.yaml
            deploy/openshift-manifest.yaml

  docs:
    if: startsWith(github.ref, 'refs/tags/')
    name: Update Docs with new manifests
    runs-on: ubuntu-latest
    needs: manifests
    steps:
      - uses: actions/checkout@v4

      - name: Publish Vercel
        run: |
          curl -X POST "https://api.vercel.com/v1/integrations/deploy/${{ secrets.VERCEL_WEBHOOK }}"
